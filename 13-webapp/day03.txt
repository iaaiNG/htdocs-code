由Ionic自己创建和维护的图标：

http://ionicframework.com/docs/ionicons/index.html

一、AlertController 
警告、输入提示、确认、自定义


①引入
import {AlertController} from 'ionic-angular'

②实例化
constructor(public myAlertCtrl:AlertController){}

③调用
let myWIndow = this.myAlertCtrl.create(
	{
	  title:'',
	  message:'',
	  buttons:[
	   {
	     text:'',
	     handler:function(){},
	     role:'cancel'//只要取消，都会调用指定的方法
	   }
	  ]，
	  inputs:
	}
);

myWIndwow.present();

只要是学过一个样式类的框架，几乎所有的都知道怎么用。

二、Button
<button ion-button color=""></button>

1、color="primary/secondary/danger/light/dark"

自定义常用的颜色：
 src/theme/variables.scss $colors进行设置
 
 $colors: (
  myPink:     pink
);

2、ion-button
3、其它常用属性
http://ionicframework.com/docs/ionicons/index.html

outline/clear/icon-left/icon-right/icon-only

<ion-icon name=""></ion-icon>

small/large/block

三、卡片 card
ion-card
	ion-card-header
	ion-card-content

四、FAB 
floating action button 悬浮式操作按钮

悬浮式按钮 最好不要加文本信息
ion-fab top/bottom/left/right/middle
ion-fab-list side="left/right/top/bottom"
<button ion-fab></button>


五、Grid
grid的基本用法：
	指定一个容器为ion-grid,
	行是通过ion-row去指定
	列是通过ion-col去指定
①在不指定列宽的情况下，列宽默认情况就均等分行的宽度
②在指定列宽的情况下，其余未指定列宽的，占据剩余的宽度并均等分
col-3/../12 指定列宽为整体宽度的x/12
③距离左边列的偏移量
offset-*
④纵向对齐方式
align-items-start/center/end -->一行的所有列
align-self-start/center/end  --> 当前这一列自己
⑤横向
justify-content-start/center/end
⑥设置距离边界的距离
push-* 向右移动
pull-* 向左移动


六、list

3种，分别是图标列表icon、联系人头像列表avatar、缩略图列表thumbnail
高级用法: 滑动列表

基本用法：
ion-list
	ion-item (ion-item是支持列表项内部的对齐,可以通过item-start/end 靠左/右)

分组列表用法：
ion-item-group
	ion-item-divider 指定分隔符内容
	ion-item 具体的内容

图标列表
ion-list
	ion-item	
		ion-icon
联系人列表
ion-list
	ion-item-sliding
		ion-item
		ion-item-options
			button
			button

七、slides
主要是来实现新手教程、轮播图。。

ion-slides
	ion-slide
	ion-slide

ion-slides所支持的属性：
	effect:
		 slide, fade, cube, coverflow or flip. 
		 Default: slide.
	speed
	autoplay
	direction：horizontal/vertical
	loop=true
	pager( 小圆点 )
	paginationType:
		bullets(小圆点),
		fraction（*/3）, 
		progress(可视化的进度条)	

八、LoadingController
实现步骤：
1、引入
	import {LoadingController} from 'ionic-angular'
2、实例化
	constructor(public myLoadCtrl:LoadingController){}
3、调用
	let myLoading = this.myLoadCtrl.create({
		content:'',
		duration:''
	})
	myLoading.present();
	myLoading.dismiss();


九、自定义模态窗: ModalController


实现步骤：
①引入ModalController
import {ModalController} from 'ionic-angular'

②实例化
constructor(public myModalCtrl:ModalController){
}

③创建
3.1 创建一个组件
	在组件中可以关闭一个模态窗呢？
	import {ViewController} from 'ionic-angular'

	constructor(public myViewCtrl:ViewController){}
	//myViewCtrl指的就是模态窗
	this.myViewCtrl.dismiss()
3.2 声明组件
	分别在declarations和entryComponents进行声明
3.3 引入对应的组件类，比如LoginComponent

3.4 创建模态窗
//create方法需要指定的参数是一个组件类
let myModal = this.myModalCtrl.create(LoginComponent);

3.5 显示模态窗
myModal.present();


总结：
AlertController
LoadingController
ModalController

Button
List 
Slides 
Card
FAB 悬浮式操作按钮
Grid 栅格布局 指定组件显示方式


每日一练：
	demo12-lianxi
	在模板内容中，要求显示一个按钮（一个隐藏的列表），
	点击按钮时，弹窗一个窗口，要求输入手机号，该窗口有确认和取消按钮；
	当点击确认，显示一个'正在验证手机号'的加载中的窗口，3s之后，自动关闭，显示一个列表（实现一个avatarList，指定3个列表项）

	button
	loadingController
	list
	alertController













